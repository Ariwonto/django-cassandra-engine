{
    "docs": [
        {
            "location": "/", 
            "text": "Django Cassandra Engine - the Cassandra backend for Django\n#\n\n\nAll tools you need to start your journey with Apache Cassandra and Django Framework!\n\n\nAlready using \n\n    DataStax Python Driver for Apache Cassandra\n\n?\nThat's great! Now you can easily integrate your existing or new Django project with it.\n\n\nOverview\n#\n\n\ndjango-cassandra-engine\n is the first Cassandra backend for \nDjango Framework\n.\nIt integrates with Django well and allows you to use \n\n    Cqlengine\n\n\ndirectly in your project. All your cassandra models are automatically synced\nin the way you're used to. You can focus on writing a good code.\n\n\nFeatures\n#\n\n\n\n\nintegration with latest \npython-driver\n from DataStax\n\n\nworking \nflush\n, \nsyncdb\n, \nmigrate\n, \nsync_cassandra\n, \ninspectdb\n and \n  \ndbshell\n commands\n\n\nsupport for creating/destroying test database\n\n\naccepts all \ncqlengine\n and \ncassandra.cluster.Cluster\n connection options\n\n\nautomatic connection/disconnection handling\n\n\nworks well along with relational databases\n\n\nstoring \nsessions\n in Cassandra\n\n\n\n\nPlans (TODO)\n#\n\n\n\n\nUser model stored in Cassandra (auth module)\n\n\nAdmin panel for Cassandra models\n\n\nForms\n\n\n\n\nRequirements\n#\n\n\n\n\nPython\n=2.7\n\n\nCassandra\n=2.0 (of course)\n\n\ncassandra-driver\n=2.5\n\n\nDjango\n=1.6\n\n\n\n\n\n\nCan't wait? \nInstall me\n!", 
            "title": "Home"
        }, 
        {
            "location": "/#django-cassandra-engine-the-cassandra-backend-for-django", 
            "text": "All tools you need to start your journey with Apache Cassandra and Django Framework!  Already using  \n    DataStax Python Driver for Apache Cassandra ?\nThat's great! Now you can easily integrate your existing or new Django project with it.", 
            "title": "Django Cassandra Engine - the Cassandra backend for Django"
        }, 
        {
            "location": "/#overview", 
            "text": "django-cassandra-engine  is the first Cassandra backend for  Django Framework .\nIt integrates with Django well and allows you to use  \n    Cqlengine \ndirectly in your project. All your cassandra models are automatically synced\nin the way you're used to. You can focus on writing a good code.", 
            "title": "Overview"
        }, 
        {
            "location": "/#features", 
            "text": "integration with latest  python-driver  from DataStax  working  flush ,  syncdb ,  migrate ,  sync_cassandra ,  inspectdb  and \n   dbshell  commands  support for creating/destroying test database  accepts all  cqlengine  and  cassandra.cluster.Cluster  connection options  automatic connection/disconnection handling  works well along with relational databases  storing  sessions  in Cassandra", 
            "title": "Features"
        }, 
        {
            "location": "/#plans-todo", 
            "text": "User model stored in Cassandra (auth module)  Admin panel for Cassandra models  Forms", 
            "title": "Plans (TODO)"
        }, 
        {
            "location": "/#requirements", 
            "text": "Python =2.7  Cassandra =2.0 (of course)  cassandra-driver =2.5  Django =1.6    Can't wait?  Install me !", 
            "title": "Requirements"
        }, 
        {
            "location": "/guide/installation/", 
            "text": "Django Cassandra Engine - Installation\n#\n\n\nInstallation of django-cassandra-engine is very simple!\n\n\nInstallation procedure\n#\n\n\nYou can install it easily from \n\nPyPi\n by single command:\n\n\n    $ pip install django-cassandra-engine\n\n\n\n\n\nor clone source code from \nGithub\n and run:\n\n\n    $ python setup.py install\n\n\n\n\n\nDownload links\n#\n\n\n\n\nGithub\n\n\nPyPi\n\n\n\n\n\n\nGreat! You have package installed, so let's \nuse it\n.", 
            "title": "Installation"
        }, 
        {
            "location": "/guide/installation/#django-cassandra-engine-installation", 
            "text": "Installation of django-cassandra-engine is very simple!", 
            "title": "Django Cassandra Engine - Installation"
        }, 
        {
            "location": "/guide/installation/#installation-procedure", 
            "text": "You can install it easily from  PyPi  by single command:      $ pip install django-cassandra-engine  or clone source code from  Github  and run:      $ python setup.py install", 
            "title": "Installation procedure"
        }, 
        {
            "location": "/guide/installation/#download-links", 
            "text": "Github  PyPi    Great! You have package installed, so let's  use it .", 
            "title": "Download links"
        }, 
        {
            "location": "/guide/getting_started/", 
            "text": "Django Cassandra Engine - Getting Started\n#\n\n\n\n\nAdd django-cassandra-engine to \nINSTALLED_APPS\n in your settings.py file:\n\n\n\n\n    \nINSTALLED_APPS\n \n=\n \n[\ndjango_cassandra_engine\n]\n \n+\n \nINSTALLED_APPS\n\n\n\n\n\n\n\n\nImportant note\n\n\nThis app should be \nthe first app\n on \nINSTALLED_APPS\n list.\nThis rule applies only to Django \n= 1.7.\n\n\n\n\n\n\nChange \nDATABASES\n setting:\n\n\n\n\n    \nDATABASES\n \n=\n \n{\n\n        \ndefault\n:\n \n{\n\n            \nENGINE\n:\n \ndjango_cassandra_engine\n,\n\n            \nNAME\n:\n \ndb\n,\n\n            \nTEST_NAME\n:\n \ntest_db\n,\n\n            \nHOST\n:\n \ndb1.example.com,db2.example.com\n,\n\n            \nOPTIONS\n:\n \n{\n\n                \nreplication\n:\n \n{\n\n                    \nstrategy_class\n:\n \nSimpleStrategy\n,\n\n                    \nreplication_factor\n:\n \n1\n\n                \n}\n\n            \n}\n\n        \n}\n\n    \n}\n\n\n\n\n\n\n\n\nDefine some model(s) in your Django app:\n\n\n\n\n    \n#  myapp/models.py\n\n    \nimport\n \nuuid\n\n    \nfrom\n \ncassandra.cqlengine\n \nimport\n \ncolumns\n\n    \nfrom\n \ncassandra.cqlengine.models\n \nimport\n \nModel\n\n\n    \nclass\n \nExampleModel\n(\nModel\n):\n\n        \nexample_id\n   \n=\n \ncolumns\n.\nUUID\n(\nprimary_key\n=\nTrue\n,\n \ndefault\n=\nuuid\n.\nuuid4\n)\n\n        \nexample_type\n \n=\n \ncolumns\n.\nInteger\n(\nindex\n=\nTrue\n)\n\n        \ncreated_at\n   \n=\n \ncolumns\n.\nDateTime\n()\n\n        \ndescription\n  \n=\n \ncolumns\n.\nText\n(\nrequired\n=\nFalse\n)\n\n\n\n\n\n\n\n\n\n\nRun \n./manage.py sync_cassandra\n in order to sync your models with Cassandra.\n\n\n\n\n\n\nDone!\n\n\n\n\n\n\n\n\nThat was simple, right? \nI want more!\n.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/guide/getting_started/#django-cassandra-engine-getting-started", 
            "text": "Add django-cassandra-engine to  INSTALLED_APPS  in your settings.py file:        INSTALLED_APPS   =   [ django_cassandra_engine ]   +   INSTALLED_APPS    Important note  This app should be  the first app  on  INSTALLED_APPS  list.\nThis rule applies only to Django  = 1.7.    Change  DATABASES  setting:        DATABASES   =   { \n         default :   { \n             ENGINE :   django_cassandra_engine , \n             NAME :   db , \n             TEST_NAME :   test_db , \n             HOST :   db1.example.com,db2.example.com , \n             OPTIONS :   { \n                 replication :   { \n                     strategy_class :   SimpleStrategy , \n                     replication_factor :   1 \n                 } \n             } \n         } \n     }    Define some model(s) in your Django app:        #  myapp/models.py \n     import   uuid \n     from   cassandra.cqlengine   import   columns \n     from   cassandra.cqlengine.models   import   Model \n\n     class   ExampleModel ( Model ): \n         example_id     =   columns . UUID ( primary_key = True ,   default = uuid . uuid4 ) \n         example_type   =   columns . Integer ( index = True ) \n         created_at     =   columns . DateTime () \n         description    =   columns . Text ( required = False )     Run  ./manage.py sync_cassandra  in order to sync your models with Cassandra.    Done!     That was simple, right?  I want more! .", 
            "title": "Django Cassandra Engine - Getting Started"
        }, 
        {
            "location": "/guide/advanced_usage/", 
            "text": "Django Cassandra Engine - Advanced Usage\n#\n\n\nCassandra as secondary database\n#\n\n\nSometimes you want to use cassandra database along with your relational database.\nThis is also possible! Just define your \nDATABASES\n like below:\n\n\n    \nfrom\n \ncassandra\n \nimport\n \nConsistencyLevel\n\n\n    \nDATABASES\n \n=\n \n{\n\n        \ndefault\n:\n \n{\n\n            \nENGINE\n:\n \ndjango.db.backends.sqlite3\n,\n\n            \nNAME\n:\n \nos\n.\npath\n.\njoin\n(\nBASE_DIR\n,\n \ndb.sqlite3\n),\n\n        \n},\n\n        \ncassandra\n:\n \n{\n\n            \nENGINE\n:\n \ndjango_cassandra_engine\n,\n\n            \nNAME\n:\n \ndb\n,\n\n            \nUSER\n:\n \nuser\n,\n\n            \nPASSWORD\n:\n \npass\n,\n\n            \nTEST_NAME\n:\n \ntest_db\n,\n\n            \nHOST\n:\n \n127.0.0.1\n,\n\n            \nOPTIONS\n:\n \n{\n\n                \nreplication\n:\n \n{\n\n                    \nstrategy_class\n:\n \nSimpleStrategy\n,\n\n                    \nreplication_factor\n:\n \n1\n\n                \n},\n\n                \nconnection\n:\n \n{\n\n                    \nconsistency\n:\n \nConsistencyLevel\n.\nLOCAL_ONE\n,\n\n                    \nretry_connect\n:\n \nTrue\n\n                    \n# + All connection options for cassandra.cluster.Cluster()\n\n                \n},\n\n                \nsession\n:\n \n{\n\n                    \ndefault_timeout\n:\n \n10\n,\n\n                    \ndefault_fetch_size\n:\n \n10000\n\n                    \n# + All options for cassandra.cluster.Session()\n\n                \n}\n\n            \n}\n\n        \n}\n\n    \n}\n\n\n\n\n\n\nThen run \n./manage.py syncdb\n for your regular database and\n\n./manage.py sync_cassandra\n or \n./manage.py syncdb --database cassandra\n\nfor Cassandra DB.\n\n\nAll \ncassandra.cluster.Cluster\n and \ncassandra.cluster.Session\n options are well described\n\n\n    here\n\n.\n\n\nUsing internal authorization\n#\n\n\nIf you want to use\n\n\n    internal authorization\n\n\njust provide \nUSER\n and \nPASSWORD\n in cassandra's database alias.\n\n\n    \n...\n\n    \ncassandra\n \n{\n\n        \nENGINE\n:\n \ndjango_cassandra_engine\n,\n\n        \nNAME\n:\n \ndb\n,\n\n        \nUSER\n:\n \nuser\n,\n\n        \nPASSWORD\n:\n \npass\n\n    \n}\n\n\n\n\n\n\nYou can also pass custom\n\n\n    auth_provider\n\n\nto \nconnection\n dict:\n\n\n    \n...\n\n    \nconnection\n:\n \n{\n\n        \nconsistency\n:\n \nConsistencyLevel\n.\nLOCAL_ONE\n,\n\n        \nretry_connect\n:\n \nTrue\n,\n\n        \nport\n:\n \n9042\n,\n\n        \nauth_provider\n:\n \nPlainTextAuthProvider\n(\nusername\n=\nuser\n,\n \npassword\n=\npassword\n)\n\n        \n# + All connection options for cassandra.cluster.Cluster()\n\n    \n}\n\n\n\n\n\n\nPerforming raw database queries\n#\n\n\nYou might need to perform queries that don't map cleanly to models,\nor directly execute \nUPDATE\n, \nINSERT\n, or \nDELETE\n queries.\n\n\nIn these cases, you can always access the database directly,\nrouting around the model layer entirely:\n\n\n    \nfrom\n \ndjango.db\n \nimport\n \nconnection\n\n    \ncursor\n \n=\n \nconnection\n.\ncursor\n()\n\n    \nresult\n \n=\n \ncursor\n.\nexecute\n(\nSELECT COUNT(*) FROM users\n)\n\n    \nprint\n \nresult\n[\n0\n][\ncount\n]\n\n\n\n\n\n\n\n\nThat was easy! Show me some useful \nmanagement commands\n now.", 
            "title": "Advanced Usage"
        }, 
        {
            "location": "/guide/advanced_usage/#django-cassandra-engine-advanced-usage", 
            "text": "", 
            "title": "Django Cassandra Engine - Advanced Usage"
        }, 
        {
            "location": "/guide/advanced_usage/#cassandra-as-secondary-database", 
            "text": "Sometimes you want to use cassandra database along with your relational database.\nThis is also possible! Just define your  DATABASES  like below:       from   cassandra   import   ConsistencyLevel \n\n     DATABASES   =   { \n         default :   { \n             ENGINE :   django.db.backends.sqlite3 , \n             NAME :   os . path . join ( BASE_DIR ,   db.sqlite3 ), \n         }, \n         cassandra :   { \n             ENGINE :   django_cassandra_engine , \n             NAME :   db , \n             USER :   user , \n             PASSWORD :   pass , \n             TEST_NAME :   test_db , \n             HOST :   127.0.0.1 , \n             OPTIONS :   { \n                 replication :   { \n                     strategy_class :   SimpleStrategy , \n                     replication_factor :   1 \n                 }, \n                 connection :   { \n                     consistency :   ConsistencyLevel . LOCAL_ONE , \n                     retry_connect :   True \n                     # + All connection options for cassandra.cluster.Cluster() \n                 }, \n                 session :   { \n                     default_timeout :   10 , \n                     default_fetch_size :   10000 \n                     # + All options for cassandra.cluster.Session() \n                 } \n             } \n         } \n     }   Then run  ./manage.py syncdb  for your regular database and ./manage.py sync_cassandra  or  ./manage.py syncdb --database cassandra \nfor Cassandra DB.  All  cassandra.cluster.Cluster  and  cassandra.cluster.Session  options are well described \n    here .", 
            "title": "Cassandra as secondary database"
        }, 
        {
            "location": "/guide/advanced_usage/#using-internal-authorization", 
            "text": "If you want to use \n    internal authorization \njust provide  USER  and  PASSWORD  in cassandra's database alias.       ... \n     cassandra   { \n         ENGINE :   django_cassandra_engine , \n         NAME :   db , \n         USER :   user , \n         PASSWORD :   pass \n     }   You can also pass custom \n    auth_provider \nto  connection  dict:       ... \n     connection :   { \n         consistency :   ConsistencyLevel . LOCAL_ONE , \n         retry_connect :   True , \n         port :   9042 , \n         auth_provider :   PlainTextAuthProvider ( username = user ,   password = password ) \n         # + All connection options for cassandra.cluster.Cluster() \n     }", 
            "title": "Using internal authorization"
        }, 
        {
            "location": "/guide/advanced_usage/#performing-raw-database-queries", 
            "text": "You might need to perform queries that don't map cleanly to models,\nor directly execute  UPDATE ,  INSERT , or  DELETE  queries.  In these cases, you can always access the database directly,\nrouting around the model layer entirely:       from   django.db   import   connection \n     cursor   =   connection . cursor () \n     result   =   cursor . execute ( SELECT COUNT(*) FROM users ) \n     print   result [ 0 ][ count ]    That was easy! Show me some useful  management commands  now.", 
            "title": "Performing raw database queries"
        }, 
        {
            "location": "/guide/management_commands/", 
            "text": "Django Cassandra Engine - Management Commands\n#\n\n\nThese Django management commands will make your life a lot easier.\n\n\nsync_cassandra\n#\n\n\nSynchronizes your models with Cassandra.\n\n\n    $ python manage.py sync_cassandra\n\n    Syncing app.models.ExampleModel\n    Syncing app.models.ExampleModel2\n    Syncing app.models.TestProjectModel\n\n\n\n\n\nmigrate\n#\n\n\nSynchronizes your models with Cassandra.\n\n\n    $ python manage.py migrate --database default\n\n    Syncing app.models.ExampleModel\n    Syncing app.models.ExampleModel2\n    Syncing app.models.TestProjectModel\n\n\n\n\n\nflush\n#\n\n\nFlushes your database.\n\n\n    $ python manage.py flush\n\n\n\n\n\ndbshell\n#\n\n\nQuick access to dbshell via \ncqlsh\n.\n\n\nIf you need to perform raw \nCQL\n query on your keyspace just run:\n\n\n    $ python manage.py dbshell\n\n    Connected to Test Cluster at 127.0.0.1:9042.\n    \n[\ncqlsh 5.0.1 \n|\n Cassandra 2.1.4 \n|\n CQL spec 3.2.0 \n|\n Native protocol v3\n]\n\n    Use HELP \nfor\n help.\n    cqlsh:your_keyspace\n\n\n\n\n\n\ninspectdb\n#\n\n\nIntrospects Cassandra database. It shows only model names and db tables.\n\n\n    \n$\n \npython\n \nmanage\n.\npy\n \ninspectdb\n\n\n    \nclass\n \nSession\n(\nmodels\n.\nModel\n):\n\n\n        \nclass\n \nMeta\n:\n\n            \nmanaged\n \n=\n \nFalse\n\n            \ndb_table\n \n=\n \nsession\n\n\n\n    \nclass\n \nExampleModel2\n(\nmodels\n.\nModel\n):\n\n\n        \nclass\n \nMeta\n:\n\n            \nmanaged\n \n=\n \nFalse\n\n            \ndb_table\n \n=\n \nexample_model2\n\n\n\n    \nclass\n \nExampleModel\n(\nmodels\n.\nModel\n):\n\n\n        \nclass\n \nMeta\n:\n\n            \nmanaged\n \n=\n \nFalse\n\n            \ndb_table\n \n=\n \nexample_model\n\n\n\n    \nclass\n \nTestProjectModel\n(\nmodels\n.\nModel\n):\n\n\n        \nclass\n \nMeta\n:\n\n            \nmanaged\n \n=\n \nFalse\n\n            \ndb_table\n \n=\n \ntest_project_model\n\n\n\n\n\n\n\n\nAlmost done! Show me how to \ntest\n my app.", 
            "title": "Management Commands"
        }, 
        {
            "location": "/guide/management_commands/#django-cassandra-engine-management-commands", 
            "text": "These Django management commands will make your life a lot easier.", 
            "title": "Django Cassandra Engine - Management Commands"
        }, 
        {
            "location": "/guide/management_commands/#sync_cassandra", 
            "text": "Synchronizes your models with Cassandra.      $ python manage.py sync_cassandra\n\n    Syncing app.models.ExampleModel\n    Syncing app.models.ExampleModel2\n    Syncing app.models.TestProjectModel", 
            "title": "sync_cassandra"
        }, 
        {
            "location": "/guide/management_commands/#migrate", 
            "text": "Synchronizes your models with Cassandra.      $ python manage.py migrate --database default\n\n    Syncing app.models.ExampleModel\n    Syncing app.models.ExampleModel2\n    Syncing app.models.TestProjectModel", 
            "title": "migrate"
        }, 
        {
            "location": "/guide/management_commands/#flush", 
            "text": "Flushes your database.      $ python manage.py flush", 
            "title": "flush"
        }, 
        {
            "location": "/guide/management_commands/#dbshell", 
            "text": "Quick access to dbshell via  cqlsh .  If you need to perform raw  CQL  query on your keyspace just run:      $ python manage.py dbshell\n\n    Connected to Test Cluster at 127.0.0.1:9042.\n     [ cqlsh 5.0.1  |  Cassandra 2.1.4  |  CQL spec 3.2.0  |  Native protocol v3 ] \n    Use HELP  for  help.\n    cqlsh:your_keyspace", 
            "title": "dbshell"
        }, 
        {
            "location": "/guide/management_commands/#inspectdb", 
            "text": "Introspects Cassandra database. It shows only model names and db tables.       $   python   manage . py   inspectdb \n\n     class   Session ( models . Model ): \n\n         class   Meta : \n             managed   =   False \n             db_table   =   session \n\n\n     class   ExampleModel2 ( models . Model ): \n\n         class   Meta : \n             managed   =   False \n             db_table   =   example_model2 \n\n\n     class   ExampleModel ( models . Model ): \n\n         class   Meta : \n             managed   =   False \n             db_table   =   example_model \n\n\n     class   TestProjectModel ( models . Model ): \n\n         class   Meta : \n             managed   =   False \n             db_table   =   test_project_model    Almost done! Show me how to  test  my app.", 
            "title": "inspectdb"
        }, 
        {
            "location": "/guide/sessions/", 
            "text": "Django Cassandra Engine - Sessions\n#\n\n\nTwo session backends backed up with Cassandra are available\n\n\n\n\ndjango_cassandra_engine.sessions.backends.db\n\n\ndjango_cassandra_engine.sessions.backends.cached_db\n\n\n\n\nAll you need to do is to enable one of them in your \nsettings.py\n file:\n\n\n    \nINSTALLED_APPS\n \n+=\n \n[\ndjango_cassandra_engine.sessions\n]\n\n    \nSESSION_BACKEND\n \n=\n \ndjango_cassandra_engine.sessions.backends.db\n\n\n\n\n\n\nThen you need to sync session model with Cassandra:\n\n\n    $ python manage.py sync_cassandra\n\n\n\n\n\nThat's it.", 
            "title": "Sessions"
        }, 
        {
            "location": "/guide/sessions/#django-cassandra-engine-sessions", 
            "text": "Two session backends backed up with Cassandra are available   django_cassandra_engine.sessions.backends.db  django_cassandra_engine.sessions.backends.cached_db   All you need to do is to enable one of them in your  settings.py  file:       INSTALLED_APPS   +=   [ django_cassandra_engine.sessions ] \n     SESSION_BACKEND   =   django_cassandra_engine.sessions.backends.db   Then you need to sync session model with Cassandra:      $ python manage.py sync_cassandra  That's it.", 
            "title": "Django Cassandra Engine - Sessions"
        }, 
        {
            "location": "/guide/tests/", 
            "text": "Django Cassandra Engine - Writing Tests\n#\n\n\nYou can write tests the way you used to. Just subclass \ndjango.test.TestCase\n\nif \ndjango_cassandra_engine\n is your primary (default) database backend.\n\n\nIf not, just use \ndjango_cassandra_engine.test.TestCase\n.\n\n\n\n\nI'm django-cassandra-engine expert now! I want to \ncontribute\n.", 
            "title": "Writing Tests"
        }, 
        {
            "location": "/guide/tests/#django-cassandra-engine-writing-tests", 
            "text": "You can write tests the way you used to. Just subclass  django.test.TestCase \nif  django_cassandra_engine  is your primary (default) database backend.  If not, just use  django_cassandra_engine.test.TestCase .   I'm django-cassandra-engine expert now! I want to  contribute .", 
            "title": "Django Cassandra Engine - Writing Tests"
        }, 
        {
            "location": "/guide/contributing/", 
            "text": "Django Cassandra Engine - Contributing\n#\n\n\nYou are highly encouraged to participate in the development,\nsimply use GitHub's fork/pull request system.\n\n\nWorking with source code and running tests\n#\n\n\n    $ git clone https://github.com/r4fek/django-cassandra-engine.git\n    $ pip install tox\n    $ \ncd\n django_cassandra_engine\n    $ tox", 
            "title": "Contributing"
        }, 
        {
            "location": "/guide/contributing/#django-cassandra-engine-contributing", 
            "text": "You are highly encouraged to participate in the development,\nsimply use GitHub's fork/pull request system.", 
            "title": "Django Cassandra Engine - Contributing"
        }, 
        {
            "location": "/guide/contributing/#working-with-source-code-and-running-tests", 
            "text": "$ git clone https://github.com/r4fek/django-cassandra-engine.git\n    $ pip install tox\n    $  cd  django_cassandra_engine\n    $ tox", 
            "title": "Working with source code and running tests"
        }, 
        {
            "location": "/faq/", 
            "text": "Django Cassandra Engine - Troubleshooting\n#\n\n\nIn case of any question please don't hesitate to ask!\n\n\nQ:  \nsyncdb\n only creates a keyspace..\n#\n\n\nA: Please make sure that \ndjango_cassandra_engine\n is \n\nthe first application\n in \nINSTALLED_APPS\n list.\n\n\nIt's also important to include your app to that list too.\n\n\nQ:  Is it possible to use it with Celery?\n#\n\n\nA: Short answer: YES.\n\n\nIf you use \ndjango_cassandra_engine\n as your default backend:\n\n\n    \n# project/tasks.py\n\n    \nfrom\n \ncelery.signals\n \nimport\n \nworker_init\n\n    \nfrom\n \ndjango.db\n \nimport\n \nconnection\n\n\n    \n@worker_process_init.connect\n\n    \ndef\n \nconnect_db\n(\n**\nkwargs\n):\n\n        \nconnection\n.\nreconnect\n()\n\n\n\n\n\n\nOr if 'cassandra' is your secondary DB alias:\n\n\n    \nfrom\n \ndjango.db\n \nimport\n \nconnections\n\n    \nconnection\n \n=\n \nconnections\n[\ncassandra\n]\n\n\n    \n@worker_process_init.connect\n\n    \ndef\n \nconnect_db\n(\n**\nkwargs\n):\n\n        \nconnection\n.\nreconnect\n()\n\n\n\n\n\n\nQ: is uWSGI supported?\n#\n\n\nA: Yes, uWSGI is supported by default. \nIt works best with \nretry_connect\n set to \nTrue\n (in django settings).\nIt also requires that \nlazy-apps = True\n is set in \nuwsgi.ini\n.", 
            "title": "FAQ"
        }, 
        {
            "location": "/faq/#django-cassandra-engine-troubleshooting", 
            "text": "In case of any question please don't hesitate to ask!", 
            "title": "Django Cassandra Engine - Troubleshooting"
        }, 
        {
            "location": "/faq/#q-syncdb-only-creates-a-keyspace", 
            "text": "A: Please make sure that  django_cassandra_engine  is  the first application  in  INSTALLED_APPS  list.  It's also important to include your app to that list too.", 
            "title": "Q:  syncdb only creates a keyspace.."
        }, 
        {
            "location": "/faq/#q-is-it-possible-to-use-it-with-celery", 
            "text": "A: Short answer: YES.  If you use  django_cassandra_engine  as your default backend:       # project/tasks.py \n     from   celery.signals   import   worker_init \n     from   django.db   import   connection \n\n     @worker_process_init.connect \n     def   connect_db ( ** kwargs ): \n         connection . reconnect ()   Or if 'cassandra' is your secondary DB alias:       from   django.db   import   connections \n     connection   =   connections [ cassandra ] \n\n     @worker_process_init.connect \n     def   connect_db ( ** kwargs ): \n         connection . reconnect ()", 
            "title": "Q:  Is it possible to use it with Celery?"
        }, 
        {
            "location": "/faq/#q-is-uwsgi-supported", 
            "text": "A: Yes, uWSGI is supported by default. \nIt works best with  retry_connect  set to  True  (in django settings).\nIt also requires that  lazy-apps = True  is set in  uwsgi.ini .", 
            "title": "Q: is uWSGI supported?"
        }, 
        {
            "location": "/changelog/", 
            "text": "Django Cassandra Engine - CHANGELOG\n#\n\n\nVersion 0.10.0 (10.06.2016)\n#\n\n\n\n\nUpdate to emit post migrate signal (by @kamal-una)\n\n\nUpdate \ncassandra-driver\n to 3.4.1\n\n\n\n\nVersion 0.9.0 (11.05.2016)\n#\n\n\n\n\nUpdate \ncassandra-driver\n to 3.3.0\n\n\nUpdate FAQ about uwsgi support\n\n\n\n\nVersion 0.8.1 (20.04.2016)\n#\n\n\n\n\nUpdate \ncassandra-driver\n to 3.2.2 (check PYTHON-547).\n\n\n\n\nVersion 0.8.0 (18.04.2016)\n#\n\n\n\n\nUpdate \ncassandra-driver\n to 3.2.1\n\n\n\n\nVersion 0.7.4 (23.03.2016)\n#\n\n\n\n\nFix error thrown in \nrunserver\n command\n\n\n\n\nVersion 0.7.3 (21.03.2016)\n#\n\n\n\n\nMinor fix in sessions backend (remove pk from \nSession.expire_date\n)\n\n\n\n\nVersion 0.7.2 (15.03.2016)\n#\n\n\n\n\nLocked \ncassandra-driver\n version in \nsetup.py\n (fixup)\n\n\n\n\nVersion 0.7.1 (15.03.2016)\n#\n\n\n\n\nUpdate \ncassandra-driver\n to 3.1.1 due to \nPYTHON-522\n\n\nFix #55: pypi page looks strange\n\n\n\n\nVersion 0.7.0 (11.03.2016)\n#\n\n\n\n\nUpdate \ncassandra-driver\n to 3.1.0\n\n\nFix \nsyncdb\n command in \nDjango\n=1.9\n\n\nFix not working \ndjango.contrib.admin\n app when \ndce\n is used\n\n\nAdd \ntox\n for running tests easily\n\n\nIntroduce \nsessions\n app\n\n\nUpdate docs\n\n\n\n\nVersion 0.6.6 (04.03.2016)\n#\n\n\n\n\nUpdate requirements.txt to support \nDjango\n1.10\n\n\n\n\nVersion 0.6.5 (22.02.2016)\n#\n\n\n\n\nFix support for latest \ndjango-nose==1.4.3\n\n\n\n\nVersion 0.6.4 (05.02.2016)\n#\n\n\n\n\nGet rid of race condition in \nCassandraConnection.setup\n\n\nRemove not needed reconnecting on \n@postfork\n\n\n\n\nVersion 0.6.3 (08.01.2016)\n#\n\n\n\n\nMajor improvement in tests execution time\n\n\n\n\nVersion 0.6.2 (08.12.2015)\n#\n\n\n\n\nSupport Django==1.9\n\n\n\n\nVersion 0.6.1 (07.12.2015)\n#\n\n\n\n\nFix \nCassandraConnection.setup\n method (thanks @mateuszm!)\n\n\n\n\nVersion 0.6.0 (25.11.2015)\n#\n\n\n\n\nUpdate cassandra-driver to 0.3.0\n\n\n\n\nVersion 0.5.2 (04.10.2015)\n#\n\n\n\n\nUpdate cassandra-driver to 2.7.2\n\n\n\n\nVersion 0.5.1 (14.09.2015)\n#\n\n\n\n\nfix #44: Fix migrate command when working in a multi db environment (by @paksu)\n\n\n\n\nVersion 0.5.0 (26.08.2015)\n#\n\n\n\n\nFix \nCassandraDatabaseFeatures.supports_transactions\n (thanks @slurms)\n\n\nUpdate cassandra-driver to 2.7.1\n\n\n\n\nVersion 0.4.0 (21.07.2015)\n#\n\n\n\n\nUpdate cassandra-driver to 2.6.0\n\n\n\n\nVersion 0.3.4 (01.07.2015)\n#\n\n\n\n\nSet Session attributes in class instead of local instance (by @mateuszm)\n\n\n\n\nVersion 0.3.3 (25.05.2015)\n#\n\n\n\n\nRemovedInDjango19Warnings when using Django \n= 1.7 (by @paksu)\n\n\nset session.default_consistency_level\n\n\n\n\nVersion 0.3.2 (04.05.2015)\n#\n\n\n\n\nupgrade cassandra-driver to 2.5.1\n\n\n\n\nVersion 0.3.1 (10.04.2015)\n#\n\n\n\n\nfix #30: Add support for Django\n=1.8\n\n\nremove djangotoolbox dependency\n\n\nfix #21: Python 3 compatibility\n\n\n\n\nVersion 0.3.0 (03.04.2015)\n#\n\n\n\n\nfix #29: Update to use integrated cqlengine via cassandra-driver\n=2.5.0\n  (by @mbeacom and @r4fek)\n\n\n\n\nVersion 0.2.3 (25.03.2015)\n#\n\n\n\n\nfix #15: test database not used by code under test (by @lsmithso)\n\n\nfix #25: working fixtures in \ndjango_cassandra_engine.test.TestCase\n \n  (by @slurms)\n\n\n\n\nVersion 0.2.2 (19.01.2015)\n#\n\n\n\n\nadd support for Django==1.5\n\n\nadd support for Django\n=1.7.2\n\n\nadd \nget_engine_from_db_alias\n util function\n\n\n\n\nVersion 0.2.1 (16.01.2015)\n#\n\n\n\n\nupdate cqlengine to 0.21.0\n\n\nmove syncing code to \nsync_cassandra\n command\n\n\nRefactor test runner\n\n\nseparate settings modules to make testing easier\n\n\nnew test application: \nmultiapp\n\n\nnew \nget_cassandra_connections\n function to return list of all\n  cassandra conncetions defined in DATABASES setting\n\n\nget_cassandra_connection\n now accepts alias and name parameters\n\n\nget_cql_models\n now returns models for given keyspace\n\n\n\n\nVersion 0.1.8 (13.12.2014)\n#\n\n\n\n\nadd working \nCursor\n implementation\n\n\nability to perform raw CQL queries\n\n\nimprove support for Django 1.7\n\n\npresent \nget_cassandra_connection\n helper\n\n\nadd more tests\n\n\n\n\nVersion 0.1.7 (24.11.2014)\n#\n\n\n\n\nrevert broken consistency fix (thanks to @danandersonasc)\n\n\n\n\nVersion 0.1.6 (24.11.2014)\n#\n\n\n\n\nfix passing proper consistency option to \ncqlengine.setup\n\n\nadd more tests\n\n\nbump cqlengine to 0.20.0\n\n\n\n\nVersion 0.1.5 (17.11.2014)\n#\n\n\n\n\nability to set \ncassandra.cluster.Session\n options like \ndefault_timeout\n\n(thanks @danpilch)\n\n\n\n\nVersion 0.1.4 (01.11.2014)\n#\n\n\n\n\nadd support for authorization (thanks to @drivard)\n\n\n\n\nVersion 0.1.3 (20.10.2014)\n#\n\n\n\n\nmore tests for Connection class\n\n\npresesnt \nsync_cassandra\n management command\n\n\n\n\nVersion 0.1.2 (20.10.2014)\n#\n\n\n\n\nadd support for uWSGI\n\n\n\n\nVersion 0.1.1 (17.10.2014)\n#\n\n\n\n\nfix exceptions in Django 1.7\n\n\noverride migrate and runserver commands\n\n\n\n\nVersion 0.1.0 (08.10.2014)\n#\n\n\n\n\nChange status to \nProduction/Stable\n\n\nBump cqlengine to v.0.19\n\n\nUpdate docs\n\n\n\n\nVersion 0.0.7 (02.10.2014)\n#\n\n\n\n\nSupport for more connection options (thanks to @mwiewiorski)\n\n\n\n\nVersion 0.0.6 (03.09.2014)\n#\n\n\n\n\nAdd support for Django 1.7\n\n\n\n\nVersion 0.0.5 (29.08.2014)\n#\n\n\n\n\nImproved models discovery\n\n\nCall the standard syncdb if the engine is not django_cassandra_engine\n  (thanks to @ratm)\n\n\nTravis integration\n\n\n\n\nVersion 0.0.4 (22.08.2014)\n#\n\n\n\n\nFeature: add support for \nflush\n management command\n\n\nBugfix: lock dependencies in setup.py\n\n\nadd more tests\n\n\n\n\nVersion 0.0.3 (21.08.2014)\n#\n\n\n\n\nBugfix: Fix some issue in \nflush\n command (add dummy support for Django 1.6.6)\n\n\n\n\nVersion 0.0.2 (04.08.2014)\n#\n\n\n\n\nBugfix: Do not reconnect on every request\n\n\n\n\nVersion 0.0.1 (31.07.2014)\n#\n\n\n\n\nFeature: allow to define cassandra backend in settings.py\n\n\nFeature: connect to the Cassandra database automatically on app startup\n\n\nFeature: \nsyncdb\n management command\n\n\nFeature: support for django test framework\n\n\nFeature: Support for Cqlengine Object Mapper", 
            "title": "Changelog"
        }, 
        {
            "location": "/changelog/#django-cassandra-engine-changelog", 
            "text": "", 
            "title": "Django Cassandra Engine - CHANGELOG"
        }, 
        {
            "location": "/changelog/#version-0100-10062016", 
            "text": "Update to emit post migrate signal (by @kamal-una)  Update  cassandra-driver  to 3.4.1", 
            "title": "Version 0.10.0 (10.06.2016)"
        }, 
        {
            "location": "/changelog/#version-090-11052016", 
            "text": "Update  cassandra-driver  to 3.3.0  Update FAQ about uwsgi support", 
            "title": "Version 0.9.0 (11.05.2016)"
        }, 
        {
            "location": "/changelog/#version-081-20042016", 
            "text": "Update  cassandra-driver  to 3.2.2 (check PYTHON-547).", 
            "title": "Version 0.8.1 (20.04.2016)"
        }, 
        {
            "location": "/changelog/#version-080-18042016", 
            "text": "Update  cassandra-driver  to 3.2.1", 
            "title": "Version 0.8.0 (18.04.2016)"
        }, 
        {
            "location": "/changelog/#version-074-23032016", 
            "text": "Fix error thrown in  runserver  command", 
            "title": "Version 0.7.4 (23.03.2016)"
        }, 
        {
            "location": "/changelog/#version-073-21032016", 
            "text": "Minor fix in sessions backend (remove pk from  Session.expire_date )", 
            "title": "Version 0.7.3 (21.03.2016)"
        }, 
        {
            "location": "/changelog/#version-072-15032016", 
            "text": "Locked  cassandra-driver  version in  setup.py  (fixup)", 
            "title": "Version 0.7.2 (15.03.2016)"
        }, 
        {
            "location": "/changelog/#version-071-15032016", 
            "text": "Update  cassandra-driver  to 3.1.1 due to  PYTHON-522  Fix #55: pypi page looks strange", 
            "title": "Version 0.7.1 (15.03.2016)"
        }, 
        {
            "location": "/changelog/#version-070-11032016", 
            "text": "Update  cassandra-driver  to 3.1.0  Fix  syncdb  command in  Django =1.9  Fix not working  django.contrib.admin  app when  dce  is used  Add  tox  for running tests easily  Introduce  sessions  app  Update docs", 
            "title": "Version 0.7.0 (11.03.2016)"
        }, 
        {
            "location": "/changelog/#version-066-04032016", 
            "text": "Update requirements.txt to support  Django 1.10", 
            "title": "Version 0.6.6 (04.03.2016)"
        }, 
        {
            "location": "/changelog/#version-065-22022016", 
            "text": "Fix support for latest  django-nose==1.4.3", 
            "title": "Version 0.6.5 (22.02.2016)"
        }, 
        {
            "location": "/changelog/#version-064-05022016", 
            "text": "Get rid of race condition in  CassandraConnection.setup  Remove not needed reconnecting on  @postfork", 
            "title": "Version 0.6.4 (05.02.2016)"
        }, 
        {
            "location": "/changelog/#version-063-08012016", 
            "text": "Major improvement in tests execution time", 
            "title": "Version 0.6.3 (08.01.2016)"
        }, 
        {
            "location": "/changelog/#version-062-08122015", 
            "text": "Support Django==1.9", 
            "title": "Version 0.6.2 (08.12.2015)"
        }, 
        {
            "location": "/changelog/#version-061-07122015", 
            "text": "Fix  CassandraConnection.setup  method (thanks @mateuszm!)", 
            "title": "Version 0.6.1 (07.12.2015)"
        }, 
        {
            "location": "/changelog/#version-060-25112015", 
            "text": "Update cassandra-driver to 0.3.0", 
            "title": "Version 0.6.0 (25.11.2015)"
        }, 
        {
            "location": "/changelog/#version-052-04102015", 
            "text": "Update cassandra-driver to 2.7.2", 
            "title": "Version 0.5.2 (04.10.2015)"
        }, 
        {
            "location": "/changelog/#version-051-14092015", 
            "text": "fix #44: Fix migrate command when working in a multi db environment (by @paksu)", 
            "title": "Version 0.5.1 (14.09.2015)"
        }, 
        {
            "location": "/changelog/#version-050-26082015", 
            "text": "Fix  CassandraDatabaseFeatures.supports_transactions  (thanks @slurms)  Update cassandra-driver to 2.7.1", 
            "title": "Version 0.5.0 (26.08.2015)"
        }, 
        {
            "location": "/changelog/#version-040-21072015", 
            "text": "Update cassandra-driver to 2.6.0", 
            "title": "Version 0.4.0 (21.07.2015)"
        }, 
        {
            "location": "/changelog/#version-034-01072015", 
            "text": "Set Session attributes in class instead of local instance (by @mateuszm)", 
            "title": "Version 0.3.4 (01.07.2015)"
        }, 
        {
            "location": "/changelog/#version-033-25052015", 
            "text": "RemovedInDjango19Warnings when using Django  = 1.7 (by @paksu)  set session.default_consistency_level", 
            "title": "Version 0.3.3 (25.05.2015)"
        }, 
        {
            "location": "/changelog/#version-032-04052015", 
            "text": "upgrade cassandra-driver to 2.5.1", 
            "title": "Version 0.3.2 (04.05.2015)"
        }, 
        {
            "location": "/changelog/#version-031-10042015", 
            "text": "fix #30: Add support for Django =1.8  remove djangotoolbox dependency  fix #21: Python 3 compatibility", 
            "title": "Version 0.3.1 (10.04.2015)"
        }, 
        {
            "location": "/changelog/#version-030-03042015", 
            "text": "fix #29: Update to use integrated cqlengine via cassandra-driver =2.5.0\n  (by @mbeacom and @r4fek)", 
            "title": "Version 0.3.0 (03.04.2015)"
        }, 
        {
            "location": "/changelog/#version-023-25032015", 
            "text": "fix #15: test database not used by code under test (by @lsmithso)  fix #25: working fixtures in  django_cassandra_engine.test.TestCase  \n  (by @slurms)", 
            "title": "Version 0.2.3 (25.03.2015)"
        }, 
        {
            "location": "/changelog/#version-022-19012015", 
            "text": "add support for Django==1.5  add support for Django =1.7.2  add  get_engine_from_db_alias  util function", 
            "title": "Version 0.2.2 (19.01.2015)"
        }, 
        {
            "location": "/changelog/#version-021-16012015", 
            "text": "update cqlengine to 0.21.0  move syncing code to  sync_cassandra  command  Refactor test runner  separate settings modules to make testing easier  new test application:  multiapp  new  get_cassandra_connections  function to return list of all\n  cassandra conncetions defined in DATABASES setting  get_cassandra_connection  now accepts alias and name parameters  get_cql_models  now returns models for given keyspace", 
            "title": "Version 0.2.1 (16.01.2015)"
        }, 
        {
            "location": "/changelog/#version-018-13122014", 
            "text": "add working  Cursor  implementation  ability to perform raw CQL queries  improve support for Django 1.7  present  get_cassandra_connection  helper  add more tests", 
            "title": "Version 0.1.8 (13.12.2014)"
        }, 
        {
            "location": "/changelog/#version-017-24112014", 
            "text": "revert broken consistency fix (thanks to @danandersonasc)", 
            "title": "Version 0.1.7 (24.11.2014)"
        }, 
        {
            "location": "/changelog/#version-016-24112014", 
            "text": "fix passing proper consistency option to  cqlengine.setup  add more tests  bump cqlengine to 0.20.0", 
            "title": "Version 0.1.6 (24.11.2014)"
        }, 
        {
            "location": "/changelog/#version-015-17112014", 
            "text": "ability to set  cassandra.cluster.Session  options like  default_timeout \n(thanks @danpilch)", 
            "title": "Version 0.1.5 (17.11.2014)"
        }, 
        {
            "location": "/changelog/#version-014-01112014", 
            "text": "add support for authorization (thanks to @drivard)", 
            "title": "Version 0.1.4 (01.11.2014)"
        }, 
        {
            "location": "/changelog/#version-013-20102014", 
            "text": "more tests for Connection class  presesnt  sync_cassandra  management command", 
            "title": "Version 0.1.3 (20.10.2014)"
        }, 
        {
            "location": "/changelog/#version-012-20102014", 
            "text": "add support for uWSGI", 
            "title": "Version 0.1.2 (20.10.2014)"
        }, 
        {
            "location": "/changelog/#version-011-17102014", 
            "text": "fix exceptions in Django 1.7  override migrate and runserver commands", 
            "title": "Version 0.1.1 (17.10.2014)"
        }, 
        {
            "location": "/changelog/#version-010-08102014", 
            "text": "Change status to  Production/Stable  Bump cqlengine to v.0.19  Update docs", 
            "title": "Version 0.1.0 (08.10.2014)"
        }, 
        {
            "location": "/changelog/#version-007-02102014", 
            "text": "Support for more connection options (thanks to @mwiewiorski)", 
            "title": "Version 0.0.7 (02.10.2014)"
        }, 
        {
            "location": "/changelog/#version-006-03092014", 
            "text": "Add support for Django 1.7", 
            "title": "Version 0.0.6 (03.09.2014)"
        }, 
        {
            "location": "/changelog/#version-005-29082014", 
            "text": "Improved models discovery  Call the standard syncdb if the engine is not django_cassandra_engine\n  (thanks to @ratm)  Travis integration", 
            "title": "Version 0.0.5 (29.08.2014)"
        }, 
        {
            "location": "/changelog/#version-004-22082014", 
            "text": "Feature: add support for  flush  management command  Bugfix: lock dependencies in setup.py  add more tests", 
            "title": "Version 0.0.4 (22.08.2014)"
        }, 
        {
            "location": "/changelog/#version-003-21082014", 
            "text": "Bugfix: Fix some issue in  flush  command (add dummy support for Django 1.6.6)", 
            "title": "Version 0.0.3 (21.08.2014)"
        }, 
        {
            "location": "/changelog/#version-002-04082014", 
            "text": "Bugfix: Do not reconnect on every request", 
            "title": "Version 0.0.2 (04.08.2014)"
        }, 
        {
            "location": "/changelog/#version-001-31072014", 
            "text": "Feature: allow to define cassandra backend in settings.py  Feature: connect to the Cassandra database automatically on app startup  Feature:  syncdb  management command  Feature: support for django test framework  Feature: Support for Cqlengine Object Mapper", 
            "title": "Version 0.0.1 (31.07.2014)"
        }, 
        {
            "location": "/license/", 
            "text": "2-clause BSD License\n#\n\n\nCopyright (c) 2014-2016, Rafa\u0142 Furma\u0144ski \n\nAll rights reserved.\n\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n\n\n\n\n\nRedistributions of source code must retain the above copyright notice,\n   this list of conditions and the following disclaimer.\n\n\n\n\n\n\nRedistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n\n\n\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\nGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", 
            "title": "License"
        }, 
        {
            "location": "/license/#2-clause-bsd-license", 
            "text": "Copyright (c) 2014-2016, Rafa\u0142 Furma\u0144ski  \nAll rights reserved.  Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:    Redistributions of source code must retain the above copyright notice,\n   this list of conditions and the following disclaimer.    Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\nGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", 
            "title": "2-clause BSD License"
        }
    ]
}